generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enums
enum ProductType {
  BAG
  BACKPACK
  CASE
  SHOPPER
  BELT_BAG
}

enum OrderStatus {
  PENDING
  PAID
  FAILED
  CANCELLED
  FULFILLED
}

enum PaymentMethod {
  LIQPAY
  COD
}

// каталог
model Product {
  id           String      @id @default(cuid())
  slug         String      @unique
  name         String
  description  String?
  type         ProductType
  basePriceUAH Int? // базова ціна (може бути в варіанті)
  inStock      Boolean     @default(true)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  variants ProductVariant[]
  images   ProductImage[]

  @@index([type])
  @@index([inStock])
}

model ProductVariant {
  id        String  @id @default(cuid())
  productId String
  product   Product @relation(fields: [productId], references: [id])

  sku      String? @unique
  color    String?
  hex      String?
  image    String?
  inStock  Boolean @default(true)
  priceUAH Int?
}

model ProductImage {
  id        String  @id @default(cuid())
  productId String
  product   Product @relation(fields: [productId], references: [id])

  url  String
  sort Int    @default(0)
}

model Customer {
  id        String   @id @default(cuid())
  email     String?  @unique
  phone     String?  @unique
  name      String?
  createdAt DateTime @default(now())

  orders Order[]
}

// замовлення
model Order {
  id        String      @id @default(cuid())
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())

  // totals (знімок на момент замовлення)
  subtotalUAH Int
  deliveryUAH Int @default(0)
  discountUAH Int @default(0)
  totalUAH    Int

  // snapshot клієнта (заповнюється з форми)
  customerName       String
  customerSurname    String
  customerPatronymic String?
  customerPhone      String
  customerEmail      String?

  // Нова Пошта (знімок)
  npCityRef       String
  npCityName      String
  npWarehouseRef  String
  npWarehouseName String

  // оплата
  paymentMethod PaymentMethod
  paymentId     String? // external id (liqpay)
  paymentStatus String? // сирий статус провайдера
  paymentRaw    Json? // payload від провайдера (обережно з PII)

  // зв’язки
  items      OrderItem[]
  customerId String?
  customer   Customer?   @relation(fields: [customerId], references: [id])

  @@index([status, createdAt])
  @@index([customerPhone])
}

model OrderItem {
  id      String @id @default(cuid())
  orderId String
  order   Order  @relation(fields: [orderId], references: [id])

  // snapshot товару
  productId String? // посилання на поточний продукт (не обов’язково)
  variantId String? // посилання на варіант (не обов’язково)
  name      String // "Beaded Bag — Pink"
  color     String?
  image     String?
  priceUAH  Int // ціна у момент покупки
  qty       Int // кількість
}
